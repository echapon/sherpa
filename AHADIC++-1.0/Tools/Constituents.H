#ifndef Constituents_H
#define Constituents_H

#include "Flavour.H"
#include <map>
#include <string>


namespace AHADIC {


  class ConstituentCharacteristic {
  public:
    double m_mass;
    int    m_ispin;
    double m_weight, m_smearing;
    ConstituentCharacteristic(double _m=0., int _is=-1, 
			      double _wt=0., double _sm=0) : 
      m_mass(_m), m_ispin(_is), m_weight(_wt), m_smearing(_sm/_m) {}

    double Mass()      { return m_mass;     }
    double TotWeight() { return m_weight;   }
    double Smearing()  { return m_smearing; }
    int    ISpin()     { return m_ispin;    }
  };




  typedef std::map<ATOOLS::Flavour,ConstituentCharacteristic *> FlavCCMap;
  typedef FlavCCMap::iterator FlavCCMap_Iterator;

  class Constituents {
  public:
    FlavCCMap CCMap;
    Constituents(bool=false);
    ~Constituents();

    double Mass(ATOOLS::Flavour & flav);
    double TotWeight(ATOOLS::Flavour & flav);
    double Smearing(ATOOLS::Flavour & flav);
    int    ISpin(ATOOLS::Flavour & flav);

    void   PrintConstituents();
  };


  /*!
    \file 
    \brief Contains the classes AHADIC::ConstituentCharacteristic and AHADIC::Constituents.
  */

  /*!
    \class ConstituentCharacteristic
    \brief Includes all information (constituent mass, spin d.o.f., flavour weight, spin weight and 
    angular smearing parameter) for a flavour that is needed in the cluster hadronisation model. It is
    accessible through the class Constituents. 

    This class is initialised by the AHADIC::Hadronisation_Parameters and made available to the rest of
    the code through a corresponding Get-method, AHADIC::Hadronisation_Parameters::GetConstituents().
    Since the methods are just simple access methods, no further documentation seems to be neccessary.
  */
  /*!
    \class Constituents
    \brief A wrapper around a searchable map, where flavours are connected with their respective 
    ConstituentCharacteristic.
  */
  ////////////////////////////////////////////////////////////////////////////////////////////////////
  // Description of member variables for Constituents
  ////////////////////////////////////////////////////////////////////////////////////////////////////
  /*!
    \var FlavCCMap Constituents::CCMap
    \brief The map of flavours and ConstituentCharacteristic's, on which this class operates and
    which is its actual core.
  */
  ////////////////////////////////////////////////////////////////////////////////////////////////////
  // Description of member methods for Constituents
  ////////////////////////////////////////////////////////////////////////////////////////////////////
  /*!
    \fn Constituents::Constituents(bool=false)
    \brief Constructor, the flag indicates whether diquarks are included. 

    The Constituents are constructed by the Hadronisation_Parameters, and actually use them in order to
    fill the Constituents::CCMap. To this end, an explicit iteration is made over all (light) flavours
    where masses and parts of the flavour weights are taken from the Hadronisation_Parameters and the spin
    wights are fixed in the code (2 for quakrs, 1 or 3 for scalar or vector diquarks, respectively).
  */
  /*!
    \fn Constituents::~Constituents()
    \brief Deletes the CCMap.
  */
  /*!
    \fn double Constituents::Mass(ATOOLS::Flavour & flav)
    \brief If the flavour is found in the CCMap, its constituent mass is returned; if not, its original mass
    from the class ATOOLS::Flavour is returned.
  */
  /*!
    \fn double Constituents::FlWeight(ATOOLS::Flavour & flav)
    \brief If the flavour is found in the CCMap, its flavour weight is returned; if not the method yields 0.
  */
  /*!
    \fn double Constituents::SpWeight(ATOOLS::Flavour & flav)
    \brief If the flavour is found in the CCMap, its spin weight is returned; if not the method yields 0.
  */
  /*!
    \fn double Constituents::TotWeight(ATOOLS::Flavour & flav)
    \brief If the flavour is found in the CCMap, its total weight (flavour weight times spin weight) is 
    returned; if not the method yields 0.
  */
  /*!
    \fn double Constituents::Smearing(ATOOLS::Flavour & flav)
    \brief If the flavour is found in the CCMap, its angular smearing parameter is returned; if not the method 
    yields 0.
  */
  /*!
    \fn double Constituents::ISpin(ATOOLS::Flavour & flav)
    \brief If the flavour is found in the CCMap, its integer spin is returned; if not the method yields 0.
  */
  /*!
    \fn double Constituents::PrintConstituents()
    \brief Prints the ingedients of the CCMap.
  */
}

#endif
