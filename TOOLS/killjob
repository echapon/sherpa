#!/bin/bash

SIGNAL=2

print_help() {
  echo "killjob version 1.0" && echo && \
  echo "options: -j <job>       kill job running in directory <job>" && \
  echo "         -s <signal>    kill job with signal <signal>" && \
  echo "         -l             run on local host" && \
  echo "         -h             display this help and exit" && \
  echo
}

while getopts :j:s:lh OPT
do
  case $OPT in
  j) JOB=$OPTARG ;;
  s) SIGNAL=$OPTARG ;;
  l) LOCAL=TRUE ;; 
  h) print_help && exit 0 ;;
  \?)
    shift `expr $OPTIND - 1`
    echo -n "killjob: error: unrecognized option "
    if [ $OPTARG != "-" ]; then echo "'-$OPTARG'. try '--help'"
    else echo "'$1'. try '--help'"
    fi
    print_help && exit 1
  esac
done

if [ "$JOB" = "" ] ; then
  echo "killjob: error: no job specified"
  exit 1
fi
if [ "$LOCAL" = "TRUE" ] ; then 

  ITEM=0
  for I in `ps aux | grep Sherpa | grep $USER` ; do
    (( ++ITEM ))
    if [ "$I" = "$USER" ] ; then ITEM=0 ; fi
    if (( ITEM == 1 )) ; then 
      if test -d /proc/$I ; then 
        MATCH=`ls -l /proc/$I/cwd | grep $JOB`
	if [ "$MATCH" != "" ] ; then 
          echo "killjob ($HOSTNAME): job '$JOB' runs as pid $I" 
	  echo "killjob ($HOSTNAME): killing pid $I with signal $SIGNAL"
	  kill -s $SIGNAL $I
	  echo "killjob ($HOSTNAME): logout"
	  exit
	fi
      else
        echo "killjob ($HOSTNAME): process $I has no entry in /proc"
      fi
    fi
  done
  echo "killjob ($HOSTNAME): no matching process found"
  echo "killjob ($HOSTNAME): logout"
  exit

else 

  if ! test -d $JOB ; then
    echo "killjob: error: no such job"
    exit 1
  fi
  NODE=`head -5 $JOB/run.log | grep HOSTNAME | awk '{ print $3 }'`
  if [ "$NODE" = "" ] ; then
    echo "killjob: error: no runtime information (according to 'run.log')"
    exit 2
  fi
  echo "killjob: job '$JOB' runs on $NODE (according to 'run.log')"
  echo "killjob: login at $NODE"
  COMMAND=`type -p killjob`
  ssh $NODE $COMMAND -l -s $SIGNAL -j $JOB

fi
